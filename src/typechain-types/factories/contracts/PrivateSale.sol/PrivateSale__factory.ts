/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PrivateSale,
  PrivateSaleInterface,
} from "../../../contracts/PrivateSale.sol/PrivateSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxContribution",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentRate",
        type: "uint256",
      },
    ],
    name: "Contribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "ICOStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ICOStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bool[]",
        name: "statuses",
        type: "bool[]",
      },
    ],
    name: "WhitelistUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "icoActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "icoEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "icoStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "startICO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopICO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalContributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalParticipations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_statuses",
        type: "bool[]",
      },
    ],
    name: "updateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60803461008d57601f610d7b38819003918201601f19168301916001600160401b0383118484101761009257808492604094855283398101031261008d5780516001600160a01b038116919082900361008d5760200151906000600655600060075560018060a01b0319338160005416176000556001541617600155600555604051610cd290816100a98239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182632aa073c514610ab5575081632ec17f4a14610a9657816333320de31461082f57816337c0892314610810578382633ccfd60b146107b05750816342e94c901461077857816348c54b9d146105725781634b60ce77146105495781637e1055b61461052a5781638d3d65761461050b5781638da5cb5b146104e357816398180dde1461042b5781639b19251a146103ed578163a7c3d71b146103ce578163a960c65f14610390578163c8e569a81461032f578163d7bb99ba1461010e575063f9f8bdb7146100ed57600080fd5b3461010a578160031936011261010a576020906008549051908152f35b5080fd5b83838160031936011261010a57338252602090600b825261013460ff8285205416610be4565b33835260098252808320546102f85760055434116102b75761015960ff855416610ba7565b34156102635733835260098252348184205561017734600754610b84565b80600755600654600181018091116102505760065560015482516370a0823160e01b81523087820152908490829060249082906001600160a01b03165afa908115610246578591610215575b50811561020257907f5f7675b09617d2c9fa4fd13058ee5877a9538f626b0308816736e83748a45040929104806008558151933485528401523392a280f35b634e487b7160e01b855260128652602485fd5b90508381813d831161023f575b61022c8183610ad4565b8101031261023b5751866101c3565b8480fd5b503d610222565b83513d87823e3d90fd5b634e487b7160e01b855260118652602485fd5b5162461bcd60e51b81529283015250602a60248201527f436f6e747269627574696f6e20616d6f756e74206d75737420626520677265616044820152690746572207468616e20360b41b6064820152608490fd5b5162461bcd60e51b81529283015250601c60248201527f45786365656473206d6178696d756d20636f6e747269627574696f6e000000006044820152606490fd5b5162461bcd60e51b815292830152506013602482015272105b1c9958591e4818dbdb9d1c9a589d5d1959606a1b6044820152606490fd5b83903461010a578160031936011261010a5761035560018060a01b038354163314610b3f565b805461036360ff8216610ba7565b60ff191690557f9365811bcb2444e2c0cf0654bed4eaf8616a5f40f95acf29974de2cfac03b5478180a180f35b50503461010a57602036600319011261010a5760209160ff9082906001600160a01b036103bb610b24565b168152600a855220541690519015158152f35b50503461010a578160031936011261010a576020906002549051908152f35b50503461010a57602036600319011261010a5760209160ff9082906001600160a01b03610418610b24565b168152600b855220541690519015158152f35b83833461010a57602036600319011261010a5761045260018060a01b038354163314610b3f565b825460ff81166104ab577f93f5ddf26d5ba0f3a210d4a367f3a45bc4a87802981b2e5f9e65b8c09b0bb9e79293426002556001610490823542610b84565b928360035560ff19161790558151904282526020820152a180f35b815162461bcd60e51b8152602081860152601260248201527149434f20616c72656164792061637469766560701b6044820152606490fd5b50503461010a578160031936011261010a57905490516001600160a01b039091168152602090f35b50503461010a578160031936011261010a576020906005549051908152f35b50503461010a578160031936011261010a576020906003549051908152f35b50503461010a578160031936011261010a5760015490516001600160a01b039091168152602090f35b91905034610774578260031936011261077457338352602090600b825261059e60ff8286205416610be4565b338452600a825260ff818520541661073a576105be60ff84541615610c30565b33845260098252808420541561070157338452600982528084205492600854938481029481860414901517156106ee57338552600a8352818520600160ff19825416179055848360018060a01b0360015416604485518094819363a9059cbb60e01b835233888401528a60248401525af19081156106e45786916106aa575b50156106715750907f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43091519283523392a280f35b82606492519162461bcd60e51b83528201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152fd5b90508381813d83116106dd575b6106c18183610ad4565b810103126106d9575180151581036106d9573861063d565b8580fd5b503d6106b7565b83513d88823e3d90fd5b634e487b7160e01b855260119052602484fd5b5162461bcd60e51b8152918201526015602482015274139bc818dbdb9d1c9a589d5d1a5bdb88199bdd5b99605a1b604482015260649150fd5b5162461bcd60e51b8152918201526016602482015275151bdad95b9cc8185b1c9958591e4818db185a5b595960521b604482015260649150fd5b8280fd5b50503461010a57602036600319011261010a5760209181906001600160a01b036107a0610b24565b1681526009845220549051908152f35b91503461010a578160031936011261010a57818080926107e960ff60018060a01b03845416926107e1843314610b3f565b541615610c30565b4790828215610807575bf1156107fd575080f35b51903d90823e3d90fd5b506108fc6107f3565b50503461010a578160031936011261010a576020906007549051908152f35b90508234610a935782600319360112610a935781359167ffffffffffffffff808411610774573660238501121561077457838201359461086e86610b0c565b9161087b82519384610ad4565b86835260209081840196876024809a60051b83010191368311610a8f578a01905b828210610a705750505087359081116106d957366023820112156106d95780850135906108c882610b0c565b906108d585519283610ad4565b8282528382018a819460051b83010191368311610a6c578b01905b828210610a5057505087546001600160a01b039391506109139084163314610b3f565b8551825103610a1557875b865181101561097a576109318184610c72565b5115158461093f838a610c72565b51168a52600b8652868a209060ff8019835416911617905560001981146109685760010161091e565b634e487b7160e01b8952601188528a89fd5b50949550908792938051968188019188525180915260608701939188905b8282106109fc575050505084820385840152518082529082019291855b8281106109e657867faa9b4ef90f4ce69eff58dfa82ee849c9d5063df771c1320a024b5a9fb672254387870388a180f35b83511515855293810193928101926001016109b5565b8351811686529486019492860192600190910190610998565b845162461bcd60e51b81528088018590526016818c015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606490fd5b81358015158103610a685781529085019085016108f0565b8a80fd5b8980fd5b81356001600160a01b0381168103610a6c57815290840190840161089c565b8880fd5b80fd5b50503461010a578160031936011261010a576020906006549051908152f35b8434610a935780600319360112610a93575060ff602092541615158152f35b90601f8019910116810190811067ffffffffffffffff821117610af657604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610af65760051b60200190565b600435906001600160a01b0382168203610b3a57565b600080fd5b15610b4657565b60405162461bcd60e51b81526020600482015260166024820152752737ba103a34329031b7b73a3930b1ba1037bbb732b960511b6044820152606490fd5b91908201809211610b9157565b634e487b7160e01b600052601160045260246000fd5b15610bae57565b60405162461bcd60e51b815260206004820152600e60248201526d49434f206e6f742061637469766560901b6044820152606490fd5b15610beb57565b60405162461bcd60e51b815260206004820152601760248201527f41646472657373206e6f742077686974656c69737465640000000000000000006044820152606490fd5b15610c3757565b60405162461bcd60e51b815260206004820152601360248201527249434f206973207374696c6c2061637469766560681b6044820152606490fd5b8051821015610c865760209160051b010190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a1d638ab3f9734e5546912568d8b78c3916588033d6a3456609b7d99ff78498464736f6c63430008120033";

type PrivateSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateSale__factory extends ContractFactory {
  constructor(...args: PrivateSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _projectToken: PromiseOrValue<string>,
    _maxContribution: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PrivateSale> {
    return super.deploy(
      _projectToken,
      _maxContribution,
      overrides || {}
    ) as Promise<PrivateSale>;
  }
  override getDeployTransaction(
    _projectToken: PromiseOrValue<string>,
    _maxContribution: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _projectToken,
      _maxContribution,
      overrides || {}
    );
  }
  override attach(address: string): PrivateSale {
    return super.attach(address) as PrivateSale;
  }
  override connect(signer: Signer): PrivateSale__factory {
    return super.connect(signer) as PrivateSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateSaleInterface {
    return new utils.Interface(_abi) as PrivateSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateSale {
    return new Contract(address, _abi, signerOrProvider) as PrivateSale;
  }
}
